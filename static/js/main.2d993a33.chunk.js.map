{"version":3,"sources":["content/WorldMap.js","content/Cards.js","content/Timeline.js","content/Home.js","emotions/TimelineEmotions.js","emotions/TimelinePolarity.js","emotions/SentimentAnalysis.js","symptoms/MexicoCityMap.js","symptoms/Timeline.js","symptoms/SymptomsMonitor.js","about/About.js","Footer.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["WorldMap","props","state","wMap","hMap","wSvg","hSvg","error","isLoaded","data","time","window","addEventListener","this","resize","bind","fetch","then","res","json","result","setState","features","innerWidth","className","w","h","projection","d3","center","translate","scale","hashtags","tags","key","startsWith","pathGenerator","states","map","d","i","fill","pos","properties","total","stroke","strokeWidth","onMouseOver","e","countryIndex","console","log","style","transition","duration","attr","html","name","pageX","pageY","handleCountryClick","onMouseOut","id","width","height","Component","styles","updateDate","marginBottom","Cards","t1","w1","t2","w2","t3","w3","t4","w4","t5","w5","mentions","words","Row","Col","Card","Body","Title","React","chart","flex","Timeline","margin","top","right","left","bottom","strokeDasharray","dataKey","x","label","type","animationDuration","PureComponent","mapBullets10","backgroundColor","mapBullets30","mapBullets50","mapBullets80","removeBullets","Home","Container","SentimentAnalysis","TimelineEmotions","TimelinePolarity","MexicoCityMap","statistics","sintomas","mentales","stateIndex","nomgeo","SymptomsMonitor","About","footerStyles","paddingTop","Footer","NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2d993a33.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport './map.css'\n\n\n/*\nhttps://observablehq.com/@d3/state-choropleth?collection=@d3/d3-geo\nhttps://medium.com/@zimrick/how-to-create-pure-react-svg-maps-with-topojson-and-d3-geo-e4a6b6848a98\nhttps://react-bootstrap.github.io/components/overlays/#popovers\nhttps://github.com/react-bootstrap/react-bootstrap/issues/1622\nhttps://www.w3schools.com/howto/howto_js_popup.asp\n*/\n\nclass WorldMap extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      wMap: 500, // Bien\n      hMap: 600, // Bien\n      wSvg: 1000, // Bien\n      hSvg: 600, //\n      error: null,\n      isLoaded: false,\n      data: [],\n      time: 'Pendiente',\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n\n    fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/home/mexico.geojson\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.features,\n                time : result.time\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n  resize() {\n    if (window.innerWidth >= 1200){\n      this.setState({\n        wMap: 500, // Bien\n        hMap: 600, // Bien\n        wSvg: 1000, // Bien\n        hSvg: 600 //\n      });\n    }else if(window.innerWidth <= 1200 && window.innerWidth >= 990){\n      this.setState({\n        wMap: 400, // Bien\n        hMap: 500, // Bien\n        wSvg: 800, // Bien\n        hSvg: 500 //\n      });\n    }else if(window.innerWidth <= 990 && window.innerWidth >= 760){\n      this.setState({\n        wMap: 300, // Bien\n        hMap: 400, // Bien\n        wSvg: 600, // Bien\n        hSvg: 400 //\n      });\n    }else{\n      this.setState({\n        wMap: 200, // Bien\n        hMap: 300, // Bien\n        wSvg: 380, // Bien\n        hSvg: 300 //\n      });\n    }\n\n    //this.setState({hideNav: window.innerWidth <= 760});\n  }\n\n  render() {\n\n    const { error, isLoaded, data, time } = this.state;\n\n    if(error){\n      return <div className='d-flex justify-content-center'>Error al cargar el mapa</div>\n    }else if(!isLoaded){\n      return <div className='d-flex justify-content-center'>Cargando mapa...</div>\n    }else{\n\n      var w = this.state.wMap,h = this.state.hMap;\n      const projection = d3.geoMercator()\n      .center([-110, 22])\n      .translate([w / 2, h / 1.7])\n      .scale([w / .3]);\n\n      const handleCountryClick = (e,data,countryIndex) => {\n        console.log(\"Clicked on country: \", data);\n        d3.select('.nav_map').style('visibility','')\n        d3.select('.nav_map').style('visibility','visible')\n        d3.select('.nav_map').transition().duration(200).attr('opacity',0.9)\n        d3.select('.nav_map').html(\"<h5>\" + data.properties.name + \"</h5>\" +\n        \"<span class='font-weight-light'>Total de tweets: <br/> <span/><span class='font-weight-bolder'>\"+this.state.data[countryIndex].properties.data.total+\"</span><br/>\" +\n        \"<span class='font-weight-light'>Top 3 Hashtags: <br/><span/><span class='font-weight-bolder'>\"+ hashtags(this.state.data[countryIndex].properties.data) +\"</span>\").style('left',(e.pageX) + 'px').style('top',(e.pageY-10) + 'px')\n      }\n\n      const mouseOut = (data, countryIndex) => {\n        d3.select('.nav_map').transition().duration(500).attr('opacity',0)\n        d3.select('.nav_map').style('visibility','hidden')\n      }\n\n      const colorIntensity = pos =>{\n        if(pos > 25000){\n          return 0.8;\n        }else if(pos > 15000 && pos <= 25000){\n          return 0.5;\n        }else if(pos > 5000 && pos <= 15000){\n          return 0.3;\n        }else{\n          return 0.1;\n        }\n      }\n\n      const hashtags = data => {\n        var tags = '';\n        for (var key in data){\n          if (key.startsWith('#')){\n              tags = tags + key + ' : ' + data[key] + '\\n'\n          }\n        }\n        return tags;\n      }\n\n\n\n      const pathGenerator = d3.geoPath().projection(projection);\n      const states = data\n         .map((d,i) => <path\n         key={'path' + i}\n         d={pathGenerator(d)}\n         className='states'\n         fill={ `rgba(49,104,232,${ colorIntensity(d.properties.data.total) })` }\n         stroke=\"#000\"\n         strokeWidth={ 1 }\n         onMouseOver = { (e) => handleCountryClick(e,d,i) }\n         onMouseOut = {() => mouseOut(d,i)}\n         />);\n\n         return(\n           <div>\n           <div className='d-flex justify-content-center font-weight-lighter'>\n             <span>Última actualización: {time}</span>\n           </div>\n           <div className='d-flex justify-content-center' id='map'>\n             <div className='nav_map'></div>\n             <svg width={this.state.wSvg} height={this.state.hSvg}>\n             {states}\n             </svg>\n           </div>\n           </div>\n\n\n        );\n\n    }\n\n  }\n\n\n}\nexport default WorldMap;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst styles = {\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Cards extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      error:null,\n      data:[],\n      time:'',\n      isLoaded:false\n    }\n  }\n\n\n  componentDidMount(){\n    fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/home/tokens.json\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.data,\n                time:result.time\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n\n\n\n\n\n  render(){\n    const {error,isLoaded,data,time} = this.state;\n    var hashtags = {t1:'',w1:'',t2:'',w2:'',t3:'',w3:'',t4:'',w4:'',t5:'',w5:''};\n    var mentions = {t1:'',w1:'',t2:'',w2:'',t3:'',w3:'',t4:'',w4:'',t5:'',w5:''};\n    var words = {t1:'',w1:'',t2:'',w2:'',t3:'',w3:'',t4:'',w4:'',t5:'',w5:''};\n    if(!error && isLoaded){\n      hashtags = data[0];\n      mentions = data[1];\n      words = data[2];\n    }\n\n    return(\n\n      <div>\n      <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n        <span>Última actualización: {time}</span>\n      </div>\n        <Row >\n        <Col className='d-flex justify-content-center'>\n        <Card style={{ width: '18rem', height:'19em' }}>\n          <Card.Body>\n          <Card.Title className=\"mb-2 text-muted \">Hashtags de hoy</Card.Title>\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t1}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w1}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t2}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w2}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t3}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w3}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t4}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w4}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t5}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w5}</div>\n          </div>\n\n          </Card.Body>\n        </Card>\n        </Col>\n\n          <Col className='d-flex justify-content-center'>\n          <Card style={{ width: '18rem', height:'19em' }}>\n          <Card.Body>\n            <Card.Title className=\"mb-2 text-muted \">Menciones de hoy</Card.Title>\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t1}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w1}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t2}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w2}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t3}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w3}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t4}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w4}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t5}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w5}</div>\n            </div>\n\n          </Card.Body>\n          </Card>\n          </Col>\n\n          <Col className='d-flex justify-content-center'>\n          <Card style={{ width: '18rem', height:'19em' }}>\n          <Card.Body>\n            <Card.Title className=\"mb-2 text-muted \">Palabras de hoy</Card.Title>\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t1}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w1}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t2}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w2}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t3}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w3}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t4}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w4}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t5}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w5}</div>\n            </div>\n\n\n          </Card.Body>\n          </Card>\n          </Col>\n        </Row>\n      </div>\n\n\n    );\n  }\n}\n\n\nexport default Cards;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend,\n  ResponsiveContainer,ReferenceLine\n  } from 'recharts';\n\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/home/timeline.json\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.data,\n                time: result.time,\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n\n\n  render() {\n    const { error, isLoaded, data, time } = this.state;\n    if(error){\n        return <div>-- Por el momento no se puede mostrar esta gráfica --</div>;\n    }else if(!isLoaded){\n        return <div>Cargando...</div>;\n    }else{\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 20, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"coronavirus\" stroke=\"#00e676\" strokeWidth='1' animationDuration={4000} />\n          <Line type=\"natural\" dataKey=\"quedateencasa\" stroke=\"#1b5e20\" strokeWidth='1' animationDuration={3500}/>\n          <Line type=\"natural\" dataKey=\"covid19\" stroke=\"#e65100\" strokeWidth='1' animationDuration={1500}/>\n          <Line type=\"natural\" dataKey=\"@HLGatell\" stroke=\"#f44336\" strokeWidth='1' animationDuration={3000}/>\n          <Line type=\"natural\" dataKey=\"@lopezobrador_\" stroke=\"#b71c1c\" strokeWidth='1' animationDuration={2500}/>\n          <Line type=\"natural\" dataKey=\"SusanaDistancia\" stroke=\"#ffab00\" strokeWidth='1' animationDuration={2000}/>\n        </LineChart>\n        </ResponsiveContainer>\n        </div>\n\n\n\n      );\n    }\n\n\n\n  }\n}\n\n\nexport default Timeline;","import React from 'react';\nimport WorldMap from './WorldMap';\nimport Cards from './Cards';\nimport Timeline from './Timeline'\nimport Container from 'react-bootstrap/Container';\n\nconst styles = {\n  mapBullets10:{\n    backgroundColor: '#3168e81a',\n  },\n  mapBullets30:{\n    backgroundColor: '#3168e84d',\n  },\n  mapBullets50:{\n    backgroundColor: '#3168e880',\n  },\n  mapBullets80:{\n    backgroundColor: '#3168e8cc',\n  },\n  removeBullets:{\n    'list-style-type': 'none'\n  }\n};\n\nclass Home extends React.Component{\n    render(){\n        return(\n            <div>\n            <Container className='mt-5 mb-5'>\n\n              <div>\n                <h1>Análisis de Twitter para COVID-19</h1>\n                <p>\n                  Este es un sistema automático de vigilancia de COVID19 mediante Twitter.\n                  Se busca evaluar el comportamiento de las personas, estados de ánimo, la popularidad\n                  de las medidas del tomadas por el gobierno y síntomas de coronavirus.\n                </p>\n              </div>\n\n              <div className='mt-5 mb-5'>\n                <div className='d-flex justify-content-center'>\n                  <h1> Palabras clave de hoy</h1>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                  <p>\n                    A continuación se enlistan los (#) hashtags, (@) menciones y palabras más frecuentes relacionados con la pandemia.\n                  </p>\n                </div>\n                <Cards/>\n              </div>\n\n\n              <div className='mt-5 mb-5'>\n\n                <div className='d-flex justify-content-center'>\n                  <h1> Linea del tiempo de palabras clave </h1>\n                </div>\n\n                <div className='d-flex justify-content-center text-secondary'>\n                  <p>\n                    La siguiente linea del tiempo presenta 6 palabras clave dentro de los tweets obtenidos cada semana.\n                    Las primeras 4 palabras son acerca del virus y el aislamiento social: <b>coronavirus</b>, <b>quedateencasa</b>, <b>covid19</b> y <b>Susanadistancia</b>.\n                    Se tomaron en cuenta las menciones más frecuentes referentes a <b>Lopez Gatell</b> y <b>Lopez Obrador</b>.\n                    Esto para conocer cómo se van mencionando a medida que pasa el tiempo y el virus avanza.\n                  </p>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                  <Timeline/>\n                </div>\n\n              </div>\n\n              <div className='mt-5 mb-5'>\n                <div className='d-flex justify-content-center'>\n                  <h1> Estados de la República </h1>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                  <p>\n                    En el siguiente mapa se muestran el <b>Top 3 Hashtags</b> con el total de tweets que hablan acerca del tema de COVID19 por cada estado desde el 31 de marzo 2020.\n                    La intensidad de color está definida por <b>la cantidad de tweets que se generan en la región</b>:\n                  </p>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                <ul style={styles.removeBullets}>\n                  <li> <span style={styles.mapBullets80}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> x &gt; 25000</b>  número de menciones </li>\n                  <li> <span style={styles.mapBullets50}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> 15000 &gt; x &gt; 25000</b>  número de menciones</li>\n                  <li> <span style={styles.mapBullets30}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> 5000 &gt; x &gt; 2500</b>  ‎‏‏‎número de menciones </li>\n                  <li> <span style={styles.mapBullets10}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> 5000 &lt; x</b>  número de menciones </li>\n                </ul>\n                </div>\n                <WorldMap/>\n              </div>\n\n\n{/*\n  <div className='mt-5 mb-5'>\n\n    <div className='d-flex justify-content-center'>\n      <h1> Emociones en redes sociales </h1>\n      </div>\n      <div className='d-flex justify-content-center text-secondary'>\n      <p>\n        El siguiente radar muestra las emociones que se han generado en el\n        discurso de tweets (Testing)\n      </p>\n    </div>\n    <div className='d-flex justify-content-center text-secondary'>\n      <EmotionalRadar/>\n    </div>\n\n  </div>*/}\n\n\n\n\n            </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend,\n  ResponsiveContainer,ReferenceLine\n  } from 'recharts';\n\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/emotions/timeline_emotions.json\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.data,\n                time: result.time,\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n\n\n  render() {\n    const { error, isLoaded, data, time } = this.state;\n    if(error){\n        return <div>-- Por el momento no se puede mostrar esta gráfica --</div>;\n    }else if(!isLoaded){\n        return <div>Cargando...</div>;\n    }else{\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 20, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"enojo\" stroke=\"#fc1303\" strokeWidth='1' animationDuration={1000} />\n          <Line type=\"natural\" dataKey=\"anticipacion\" stroke=\"#ff9626\" strokeWidth='1' animationDuration={1500}/>\n          <Line type=\"natural\" dataKey=\"disgusto\" stroke=\"#c338f5\" strokeWidth='1' animationDuration={2000}/>\n          <Line type=\"natural\" dataKey=\"miedo\" stroke=\"#229426\" strokeWidth='1' animationDuration={2500}/>\n          <Line type=\"natural\" dataKey=\"alegria\" stroke=\"#f6fa1e\" strokeWidth='1' animationDuration={3000} />\n          <Line type=\"natural\" dataKey=\"tristeza\" stroke=\"#433bdb\" strokeWidth='1' animationDuration={3500}/>\n          <Line type=\"natural\" dataKey=\"sorpresa\" stroke=\"#27e0f5\" strokeWidth='1' animationDuration={4000}/>\n          <Line type=\"natural\" dataKey=\"confianza\" stroke=\"#9ff5ab\" strokeWidth='1' animationDuration={4500}/>\n      </LineChart>\n        </ResponsiveContainer>\n        </div>\n\n\n\n      );\n    }\n\n\n\n  }\n}\n\n\nexport default Timeline;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend,\n  ResponsiveContainer,ReferenceLine\n  } from 'recharts';\n\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/emotions/timeline_polarity.json\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.data,\n                time: result.time,\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n\n\n  render() {\n    const { error, isLoaded, data, time } = this.state;\n    if(error){\n        return <div>-- Por el momento no se puede mostrar esta gráfica --</div>;\n    }else if(!isLoaded){\n        return <div>Cargando...</div>;\n    }else{\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 20, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"Tweets_Negativo\" stroke=\"#c338f5\" strokeWidth='1' animationDuration={2000}/>\n          <Line type=\"natural\" dataKey=\"Tweets_Positivo\" stroke=\"#433bdb\" strokeWidth='1' animationDuration={2500}/>\n          <Line type=\"natural\" dataKey=\"Tweets_Neutro\" stroke=\"#888888\" strokeWidth='1' animationDuration={3000} />\n    </LineChart>\n        </ResponsiveContainer>\n        </div>\n\n\n\n      );\n    }\n\n\n\n  }\n}\n\n\nexport default Timeline;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport TimelineEmotions from './TimelineEmotions';\nimport TimelinePolarity from './TimelinePolarity';\n\nclass SentimentAnalysis extends React.Component{\n    render(){\n        return(\n            <div>\n                <Container className='mt-5 mb-5'>\n                <div>\n                  <h1>Análisis de emociones</h1>\n                  <p>\n                    Este es un sistema que monitorea las emociones provocadas por el COVID19 en Twitter\n                  </p>\n                </div>\n\n                <div className='mt-5 mb-5'>\n\n                  <div className='d-flex justify-content-center'>\n                    <h1> Linea del tiempo de emociones </h1>\n                  </div>\n\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <p>\n                      La siguiente linea del tiempo presenta las emociones causadas en los usuarios de la\n                      red social.\n                    </p>\n                  </div>\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <TimelineEmotions/>\n                  </div>\n\n                </div>\n\n      \n                <div className='mt-5 mb-5'>\n                  <div className='d-flex justify-content-center'>\n                    <h1> Linea del tiempo de polaridad </h1>\n                  </div>\n\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <p>\n                      La siguiente linea del tiempo presenta la polaridad de los mensajes\n                      escritos por los usuarios.\n                    </p>\n                  </div>\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <TimelinePolarity/>\n                  </div>\n                </div>\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default SentimentAnalysis;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\n\n/*\nhttps://observablehq.com/@d3/state-choropleth?collection=@d3/d3-geo\nhttps://medium.com/@zimrick/how-to-create-pure-react-svg-maps-with-topojson-and-d3-geo-e4a6b6848a98\nhttps://react-bootstrap.github.io/components/overlays/#popovers\nhttps://github.com/react-bootstrap/react-bootstrap/issues/1622\nhttps://www.w3schools.com/howto/howto_js_popup.asp\n*/\n\nclass MexicoCityMap extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      wMap: 500, // Bien\n      hMap: 600, // Bien\n      wSvg: 1000, // Bien\n      hSvg: 600, //\n      error: null,\n      isLoaded: false,\n      data: [],\n      time: 'Pendiente',\n      statistics:[]\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n\n    fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/symptoms/alcaldias.json\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.features,\n                time: result.time\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n  resize() {\n    if (window.innerWidth >= 1200){\n      this.setState({\n        wMap: 500, // Bien\n        hMap: 600, // Bien\n        wSvg: 1000, // Bien\n        hSvg: 600 //\n      });\n    }else if(window.innerWidth <= 1200 && window.innerWidth >= 990){\n        this.setState({\n        wMap: 400, // Bien\n        hMap: 500, // Bien\n        wSvg: 800, // Bien\n        hSvg: 500 //\n      });\n    }else if(window.innerWidth <= 990 && window.innerWidth >= 760){\n      this.setState({\n        wMap: 300, // Bien\n        hMap: 400, // Bien\n        wSvg: 600, // Bien\n        hSvg: 400 //\n      });\n    }else{\n      this.setState({\n        wMap: 200, // Bien\n        hMap: 300, // Bien\n        wSvg: 380, // Bien\n        hSvg: 300 //\n      });\n    }\n\n    //this.setState({hideNav: window.innerWidth <= 760});\n  }\n\n\n  render() {\n\n    const { error, isLoaded, data, time } = this.state;\n\n    if(error){\n      return <div className='d-flex justify-content-center'>Error al cargar el mapa</div>\n    }else if(!isLoaded){\n      return <div className='d-flex justify-content-center'>Cargando mapa...</div>\n    }else{\n\n      var w = this.state.wMap,h = this.state.hMap;\n      const projection = d3.geoMercator()\n      .center([-99.12, 19.00])\n      .translate([w/1, h / 0.94])\n      .scale([115*w]);\n\n      const handleCountryClick = (e,data,stateIndex) => {\n        console.log(\"Clicked on country: \", data);\n        d3.select('.nav_map').style('visibility','')\n        d3.select('.nav_map').style('visibility','visible')\n        d3.select('.nav_map').transition().duration(200).attr('opacity',0.9)\n        d3.select('.nav_map').html(\"<h5>\" + data.properties.nomgeo + \"</h5>\" +\n        \"<span class='font-weight-light'>Síntomas COVID19: <br/> <span/><span class='font-weight-bolder'>\" + this.state.data[stateIndex].properties.data.sintomas + \"</span><br/>\" +\n        \"<span class='font-weight-light'>Síntomas mentales: <br/><span/><span class='font-weight-bolder'>\" + this.state.data[stateIndex].properties.data.mentales + \"</span>\").style('left',(e.pageX) + 'px').style('top',(e.pageY-10) + 'px')\n      }\n\n      const mouseOut = (data, countryIndex) => {\n        d3.select('.nav_map').transition().duration(500).attr('opacity',0)\n        d3.select('.nav_map').style('visibility','hidden')\n      }\n\n      const color = pos =>{\n        var covid = pos.sintomas;\n        var mental = pos.mentales;\n        if (covid > mental){\n          return 0.5;\n        }else{\n          return 0.3;\n        }\n      }\n\n\n      const pathGenerator = d3.geoPath().projection(projection);\n      const states = data\n         .map((d,i) => <path\n         key={'path' + i}\n         d={pathGenerator(d)}\n         className='states'\n         fill={ `rgba(49,104,232,${ color(d.properties.data) })` }\n         stroke=\"#000\"\n         strokeWidth={ 1 }\n         onMouseOver = { (e) => handleCountryClick(e,d,i) }\n         onMouseOut = {() => mouseOut(d,i)}\n         />);\n\n         return(\n\n           <div>\n              <div className='d-flex justify-content-center font-weight-lighter'>\n                <span>Última actualización: {time}</span>\n              </div>\n              <div className='d-flex justify-content-center' id='map'>\n                <div className='nav_map '></div>\n                <svg width={this.state.wSvg} height={this.state.hSvg}>\n                  {states}\n                </svg>\n              </div>\n\n           </div>\n\n\n        );\n\n    }\n\n  }\n\n\n}\nexport default MexicoCityMap;","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend,\n  ResponsiveContainer,ReferenceLine\n  } from 'recharts';\n\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/symptoms/timeline.json\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.data,\n                time: result.time,\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n\n\n  render() {\n    const { error, isLoaded, data, time } = this.state;\n    if(error){\n        return <div>-- Por el momento no se puede mostrar esta gráfica --</div>;\n    }else if(!isLoaded){\n        return <div>Cargando...</div>;\n    }else{\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 20, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-06-29\" label=\"Cambio a semáforo naranja\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"Estados mentales\" stroke=\"#9336b5\" strokeWidth='1' animationDuration={2000} />\n          <Line type=\"natural\" dataKey=\"Sintomas COVID\" stroke=\"#eb0e63\" strokeWidth='1' animationDuration={1500}/>\n          </LineChart>\n        </ResponsiveContainer>\n        </div>\n\n\n\n      );\n    }\n\n\n\n  }\n}\n\n\nexport default Timeline;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport MexicoCityMap from './MexicoCityMap';\nimport Timeline from './Timeline';\n\nclass SymptomsMonitor extends React.Component{\n\n    render(){\n        return(\n            <div>\n            <Container className='mt-5 mb-5'>\n\n            <div>\n              <h1>Análisis de síntomas para COVID-19</h1>\n              <p>\n                Este es un sistema automático de vigilancia de síntomas de COVID19 para México\n                Los síntomas presentados tienen 2 categorías principales: los físicos causados por\n                COVID19 como fiebre, tos o gripe y los transtornos ocasionados por el asilamiento\n                social como ansiedad, depresión, insomnio, entre otros.\n\n              </p>\n            </div>\n\n            <div className='mt-5 mb-5'>\n\n              <div className='d-flex justify-content-center'>\n                <h1> Línea del tiempo de síntomas COVID vs salud mental</h1>\n              </div>\n\n              <div className='d-flex justify-content-center text-secondary'>\n                <p>\n                  El siguiente gráfico representa la cantidad de síntomas relacionados al COVID-19\n                  y los estados de salud mental que se pueden presentar en la población debido al aislamiento social y demás factores.\n                  Por cada día se presentan dos valores, cada uno de ellos indica la cantidad de apariciones de síntomas de cada tipo (COVID-19 y estados de salud mental o psicológicos),\n                  esto con el fin de conocer cómo afecta el paso del tiempo a la frecuencia de estos dos valores.\n                </p>\n              </div>\n              <div className='d-flex justify-content-center text-secondary'>\n                <Timeline/>\n              </div>\n\n            </div>\n\n            <div className='mt-5 mb-5'>\n              <div className='d-flex justify-content-center'>\n                <h1> Mapa de síntomas de la CDMX </h1>\n              </div>\n              <div className='d-flex justify-content-center text-secondary'>\n                <p>\n                  El siguiente mapa representa la cantidad de tweets por Alcaldía de la Ciudad de México que contienen síntomas relacionados al COVID-19 y los estados de salud mental relacionados al distanciamiento social.\n                  Estos valores no son acumulativos, por lo que cada día cambian.\n                </p>\n              </div>\n                <MexicoCityMap/>\n            </div>\n\n\n\n\n{/*\n  <div className='d-flex justify-content-center'>\n      <TweetEmbed id='692527862369357824'/>\n  </div>*/\n}\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default SymptomsMonitor;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass About extends React.Component{\n    render(){\n        return(\n            <div>\n\n\n                <Container>\n\n                <div className='mt-5 mb-5'>\n                  <div className='d-flex justify-content-center'>\n                      <h1>Quiénes somos</h1>\n                  </div>\n                  <div>\n                      <p>Somos un grupo de investigadores, profesores y estudiantes pertenecientes a la Universidad Nacional Autónoma de México (UNAM), particularmente al Instituto de Ingeniería (IIUNAM) y al Instituto de Investigaciones en Matemáticas Aplicadas y en Sistemas (IIMAS) con interés en el procesamiento del lenguaje natural. Este proyecto consta de un sistema automático de vigilancia de COVID19 mediante Twitter, en el cual se busca analizar mensajes de esta red social para evaluar el comportamiento de las personas, estados de ánimo, la popularidad de las medidas dadas por el gobierno, y, además, monitorear usuarios con posibles síntomas de coronavirus en tiempo real a través de Internet.</p>\n                  </div>\n                  <div className='d-flex justify-content-center'>\n                      <h2>Colaboradores (orden alfabético)</h2>\n                  </div>\n                </div>\n\n                <div className='mt-5 mb-5'>\n                <Row >\n                  <Col>\n                    <h4 >Gemma Bel Enguix (IINGEN)</h4>\n                    <ul>\n                        <li>Investigadora Titular “A”   del Instituto de Ingeniería</li>\n                        <li>Miembro del Sistema Nacional de   Investigadores</li>\n                        <li>Contacto: gbele@iingen.unam.mx</li>\n                    </ul>\n                  </Col>\n\n                  <Col>\n                  <h4>Pablo Camacho González</h4>\n                  <ul>\n                      <li>Estudiante de Maestría en Ciencias e Ingeniería de la computación</li>\n                      <li>Línea de Investigación en el área de Inteligencia Artificial</li>\n                      <li>Contacto: pablopcg1@ciencias.unam.mx</li>\n                  </ul>\n                  </Col>\n                </Row>\n                </div>\n\n                <div className='mt-5 mb-5'>\n                <Row >\n                  <Col>\n                    <h4 >Gabriel Castillo (IINGEN)</h4>\n                    <ul>\n                        <li>Técnico Académico Titular \"B\" del Instituto de Ingeniería</li>\n                        <li>gch@pumas.iingen.unam.mx</li>\n                    </ul>\n                  </Col>\n\n                  <Col>\n                  <h4>Helena Gómez Adorno (IIMAS)</h4>\n                  <ul>\n                      <li>Investigadora Asociada “C”   del Instituto de Investigaciones en Matemáticas Aplicadas y en Sistemas</li>\n                      <li>Miembro del Sistema Nacional de   Investigadores Nivel I</li>\n                      <li>Contacto: helena.gomez@iimas.unam.mx</li>\n                  </ul>\n                  </Col>\n                </Row>\n                </div>\n\n\n                <div className='mt-5 mb-5'>\n                <Row >\n                  <Col>\n                    <h4 >Ricardo Jiménez Cruz</h4>\n                    <ul>\n                        <li>Pasante de Ingenieria en computación</li>\n                        <li>Línea de Investigación en el área de Inteligencia Artificial</li>\n                        <li>Contacto: ricardoj.epc@gmail.com</li>\n                    </ul>\n                  </Col>\n\n                  <Col>\n\n                  <h4>José Armando López Velasco</h4>\n                  <ul>\n                      <li>Estudiante de Maestría en Ciencias e Ingeniería de la Computación</li>\n                      <li>Línea de investigación en el área de Inteligencia Artificial</li>\n                      <li>Contacto: armando.lpzv@gmail.com</li>\n                  </ul>\n                  </Col>\n                </Row>\n                </div>\n\n                <div className='mt-5 mb-5'>\n                <Row >\n                  <Col>\n                    <h4 >Jessica Sarahi Méndez Rincón</h4>\n                    <ul>\n                        <li>Estudiante del Posgrado en Ciencias e Ingeniería en Computación en el IIMAS</li>\n                        <li>Línea de Investigación en el área de Inteligencia Artificial</li>\n                        <li>Contacto: ingenierajessica@gmail.com</li>\n                    </ul>\n                  </Col>\n\n                  <Col>\n\n                  <h4 >Jesús Germán Ortiz Barajas</h4>\n                  <ul>\n                      <li>Pasante de Ingenieria en computación</li>\n                      <li>Línea de Investigación en el área de Inteligencia Artificial</li>\n                      <li>Contacto: jortizb@iingen.unam.mx</li>\n                  </ul>\n                  </Col>\n                </Row>\n                </div>\n\n                <div className='mt-5 mb-5'>\n                <Row >\n\n                  <Col>\n                  <h4>Gerardo Sierra   (INGEN)</h4>\n                  <ul>\n                      <li>Investigador Titular “B” del   Instituto de Ingeniería</li>\n                      <li>Miembro del Sistema Nacional de Investigadores   Nivel II</li>\n                      <li>Contacto: gsierram@iingen.unam.mx</li>\n                  </ul>\n                  </Col>\n                </Row>\n                </div>\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React from 'react';\n\n\nconst footerStyles ={\n  height:'80px',\n  paddingTop:'20px'\n\n}\n\n\n\nclass Footer extends React.Component{\n\n  render(){\n\n    return(\n      <div style={footerStyles} className='bg-dark text-light text-center'>\n      <p>UNAM, México 2020 </p>\n      </div>\n\n    );\n  }\n\n\n}\n\n\nexport default Footer;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {Link} from 'react-router-dom';\n\n\nclass NavBar extends React.Component{\n\n  render(){\n\n    return(\n\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand as={Link} to={'/'}>COVID-19 México</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to='/sintomas'>Monitor de síntomas</Nav.Link>\n            <Nav.Link as={Link} to='/emociones'>Análisis de emociones</Nav.Link>\n          </Nav>\n          <Nav>\n            <Nav.Link as={Link} to=\"/about\"> Acerca de </Nav.Link>\n          </Nav>\n          </Navbar.Collapse>\n      </Navbar>\n\n    );\n  }\n\n\n}\n\n\nexport default NavBar;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './content/Home';\nimport SentimentAnalysis from './emotions/SentimentAnalysis';\nimport SymptomsMonitor from './symptoms/SymptomsMonitor'\nimport About from './about/About';\nimport Footer from './Footer';\nimport NavBar from './NavBar';\n\nclass App extends React.PureComponent {\n\n  render(){\n\n    return (\n      <div>\n      <NavBar/>\n      <Switch>\n          <Route exact path={'/'} component={Home}/>\n          <Route path='/emociones' component={SentimentAnalysis}/>\n          <Route path='/sintomas' component={SymptomsMonitor}/>\n          <Route path='/about' component={About}/>\n      </Switch>\n      <Footer/>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n//Browser Router\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter><App /></HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}